"" General
set nocompatible
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

Plugin 'gmarik/Vundle.vim'

"" Interface
Plugin 'kien/ctrlp.vim'
Plugin 'FelikZ/ctrlp-py-matcher'
Plugin 'vim-scripts/ZoomWin'
Plugin 'The-NERD-tree'
Plugin 'Lokaltog/vim-powerline'
Plugin 'tpope/vim-dispatch'
Plugin 'skalnik/vim-vroom'

"" Search
Plugin 'rking/ag.vim'

"" Code edit
Plugin 'The-NERD-Commenter'
Plugin 'tpope/vim-unimpaired'
Plugin 'tpope/vim-surround'
Plugin 'tpope/vim-endwise'
Plugin 'godlygeek/tabular'
Plugin 'ervandew/vim-supertab'
Plugin 'majutsushi/tagbar'

"" Ruby & Rails stuff
Plugin 'vim-ruby/vim-ruby'
Plugin 'pgr0ss/vimux-ruby-test'
Plugin 'ecomba/vim-ruby-refactoring'
Plugin 'tpope/vim-rails'
Plugin 'tpope/vim-bundler'
Plugin 'tpope/vim-rake'

"" Code snippets
Plugin 'tomtom/tlib_vim'
Plugin 'MarcWeber/vim-addon-mw-utils'
Plugin 'garbas/vim-snipmate'
Plugin 'honza/vim-snippets'
Plugin 'aperezdc/vim-template'

"" Markdown
Plugin 'tpope/vim-markdown'
Plugin 'waylan/vim-markdown-extra-preview'

"" Git & Github
Plugin 'tpope/vim-fugitive'
Plugin 'mattn/webapi-vim'
Plugin 'mattn/gist-vim'

"" Coffee, slim, etc.
Plugin 'kchmck/vim-coffee-script'
Plugin 'slim-template/vim-slim'

"" Colorschemes
Plugin 'altercation/vim-colors-solarized'
Plugin 'chriskempson/tomorrow-theme'
Plugin 'w0ng/vim-hybrid'
Plugin '29decibel/codeschool-vim-theme'
Plugin 'flazz/vim-colorschemes'

call vundle#end()

syntax on
filetype plugin indent on " Load file type plugins + indentation
set fileencoding=utf-8    " set encoding
set linebreak
set history=1000
set mouse=a
set ttyfast
set hidden
set autoread
set showcmd               " display incomplete commands
let mapleader=","         " use comma as <Leader> key instead of backslash

"" Visual clues
set ruler
set cursorline
set showbreak=↪
set number

"" Colours
let t_Co=256
let g:hybrid_use_iTerm_colors = 1
"let g:hybrid_use_Xresources = 1
silent! colorscheme hybrid

"" Undo across sessions
if has('gui_running')
   set undodir=~/.vim/backups
   set undofile
endif

"" Whitespace
set nowrap			                    " don't wrap lines
set tabstop=2 shiftwidth=2	        " a tab is two spaces
set softtabstop=2
set expandtab			                  " use spaces, not tabs
set list listchars=tab:\ \ ,trail:·	" set trailing space name
set backspace=indent,eol,start	    " backspace through everything in insert mode

"" Searching
set hlsearch			          " highlight matches
set incsearch			          " incremental searching
set ignorecase			        " searches are case insensitive
set smartcase			          " ..unless they contatin at least one capital letter
nnoremap <F3> :set hlsearch!<CR>	" switch highlighting

"" Scrolling
set scrolloff=10
set sidescrolloff=15
set sidescroll=1

"" Backups
set nobackup
set nowritebackup
set noswapfile

"" Navigation
"nnoremap <c-h> <c-w>h
"nnoremap <c-j> <c-w>j
"nnoremap <c-k> <c-w>k
"nnoremap <c-l> <c-w>l

"" Get off my lawn
nnoremap <Left> :echoe "Use h"<CR>
nnoremap <Down> :echoe "Use j"<CR>
nnoremap <Up> :echoe "Use k"<CR>
nnoremap <Right> :echoe "Use l"<CR>

"" Backup
set backupdir=~/.vim/backup
set directory=~/.vim/backup

"" Zoomwin
map <Leader>= <C-w>=
map <Leader><Leader> :ZoomWin<CR>

"" Ag
map <Leader>f :Ag<space>
nnoremap K :Ag "\b<C-R><C-W>\b"<CR>:cw<CR>

"" NERDTree config
map <Leader>n :NERDTreeToggle<CR>
map <Leader>m :NERDTreeFind<CR>

"" Ctrlp
let g:ctrlp_custom_ignore = '\v[\/]\.(git|hg|svn)$'
let g:ctrlp_match_func = { 'match': 'pymatcher#PyMatch' }
let g:ctrlp_lazy_update = 350



"" Tab completion
set wildmode=list:longest,list:full
set wildignore+=*.o,*.obj,.git,*.rbc,*.pyc,*.zip,*.gz,*.bz,*.tar,*.jpg,*.png,*.png,*.gif,*.avi,*.wmv,*.ogg,*.mp3,*.mov,*.so,*.swp,*.zip

"" Filetypes
au BufNewFile,BufRead {Capfile,Gemfile,Rakefile,Vagrantfile,Thorfile,config.ru,*.rabl,*.rake}  set syntax=ruby
au BufNewFile,BufRead *.json                set syntax=javascript
au BufNewFile,BufRead *.md,*.mkd,*.markdown set syntax=markdown

let g:VMEPstylesheet = 'github2.css'

"" SnipMate
let g:snipMate = {}
let g:snipMate.scope_aliases = {}
let g:snipMate.scope_aliases['ruby'] = 'ruby,ruby-rails,ruby-1.9'

"" Trailing whitespace remove on save
autocmd BufWritePre *.coffee,*.js,*.rb,*.py,*.c,*.h,*.feature,*.conf,*rc,README,CHANGELOG,README.* :%s/\s\+$//e

"" Toggle pasting
nnoremap <F2> :set invpaste paste?<CR>
set pastetoggle=<F2>
set showmode

"" Bubble signle lines
nmap <C-Up> [e
nmap <C-Down> ]e

"" Bubble multiple lines
vmap <C-Up> [egv
vmap <C-Down> ]egv

"" Tabular
nmap <Leader>a= :Tabularize /=<CR>
vmap <Leader>a= :Tabularize /=<CR>
nmap <Leader>a> :Tabularize /=><CR>
vmap <Leader>a> :Tabularize /=><CR>
vmap <Leader>a{ :Tabularize /:<CR>
vmap <Leader>a{ :Tabularize /:<CR>
nmap <Leader>a: :Tabularize /:\zs<CR>
nmap <Leader>a: :Tabularize /:\zs<CR>

"" Gist
let g:gist_clip_command = 'pbcopy'
let g:gist_detect_filetype = 1
let g:gist_show_privates = 1

"" Powerline
let g:Powerline_symbols = 'fancy'
set laststatus=2

"" Tagbar
nmap <Leader>tb :TagbarToggle<CR>

"" Vim templates
let g:templates_no_autocmd = 1

"" XML prettify
function! PrettifyXML()
  set ft=xml
  :%s/></>\r</g
  :0
  :norm =G
endfunction
